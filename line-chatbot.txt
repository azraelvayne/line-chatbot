from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage

app = Flask(__name__)

# 設定你的 LINE Bot 的資訊
channel_secret = '1268eb4f16e5d543a622a4c4341abbd6'
channel_access_token = 'LEPQ+PdKPSLcoS9GBbdFukdoHl+KigQAE1/6atOcvQn97Own17jB19NydaKRrEuMNR0c0P2h9jFk7IVWb3DQs/cEJGvVFGF6Ki/v+Nw8+QWGTYpeEkk9v7Yb6/OCR0OS7RmAlJWhRW42/a6 kmbQiMgdB04t89/1O/w1cDnyilFU='
line_bot_api = LineBotApi(channel_access_token)
handler = WebhookHandler(channel_secret)

# 設定 Webhook 路由，用於接收 LINE 平台的訊息
@app.route("/callback", methods=['POST'])
def callback():
    # 取得請求標頭的 X-Line-Signature 屬性
    signature = request.headers['X-Line-Signature']

    # 取得請求內容
    body = request.get_data(as_text=True)

    # 處理訊息事件
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return 'OK'

# 處理文字訊息事件
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    # 取得使用者傳送的文字訊息
    user_text = event.message.text

    # 回覆相同的訊息給使用者
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=user_text)
    )

if __name__ == "__main__":
    app.run()
